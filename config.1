c     **** Monte Carlo calc to make mi=8 images of 2VB1 that reproduce site occupancies **** 

      implicit real*4 (a-h,o-z)
      include 'readhin.cmn'
      parameter (mgroup=250, mingroup=150, mint=1000, mpos=72, mi=8)
      real*4 xg(m,mi,mpos),yg(m,mi,mpos),zg(m,mi,mpos)
      real*4 xim(m,mi,mpos),yim(m,mi,mpos),zim(m,mi,mpos)
      real*4 eps(m,mi,mpos),sig(m,mi,mpos)
      real*4 frtype(mpos,mgroup),e(mi,mgroup)
      real*4 water(6,mpos)
      integer intlist(m,mi,mpos),ntype(mpos,mgroup),npos(mgroup)
      integer group(mingroup,mgroup),config(mi,mgroup)
      logical iswater(mgroup)

      character*12 fname(3)
      data fname /'2VB1AAAc.hin','2VB1BBBc.hin','2VB1AACc.hin'/

c     **** read and process the coords for configs A B and C ****

      do ic= 1,3

	nmol= 0
	natom= 0
        if (.not. readhin (fname(ic),0)) stop 'file not found'
	nimage= 1

	if (ic.eq.2) then
c	  **** add space for 9 missing atoms in TYR 20 - A of config B and delete two HXT ****
c	  **** missing atoms are CD1 CD2 CE1 CE2 CZ OH and hydrogens HD1 HD2 HE1 HE2 and HH ****
	  resname(1,imol)(1:3)= 'TYR'
	  i= iares(20,1) - 1
	  call hdel (i+11,2,1)
	  call hadd (i+6,6,1)
	  call hadd (i+16,5,1)
c	  **** copy over coords of str B ****
	  do i= iares(20,1),jares(20,1)
	    xg(i,1,2)= x(i)
	    yg(i,1,2)= y(i)
	    zg(i,1,2)= z(i)
	  end do
c	  **** copy back A str ****
	  call hcopy (isave,iares(20,1),nares(20,1))
c	  **** copy back new coords, use CG locn as shit for missing atoms ****
	  i= iares(20,1) + 5
	  dx= xg(i,1,2) - xg(i,1,1)
	  dy= yg(i,1,2) - yg(i,1,1)
	  dz= zg(i,1,2) - zg(i,1,1)
	  do i= iares(20,1),jares(20,1)
	    if (xg(i,1,2).eq.-1000.) then
	      x(i)= xg(i,1,1) + dx
	      y(i)= yg(i,1,1) + dy
	      z(i)= zg(i,1,1) + dz
	    else
	      x(i)= xg(i,1,2)
	      y(i)= yg(i,1,2)
	      z(i)= zg(i,1,2)
	    end if
	  end do
	end if

c	**** find NO3s, add space for optional water ****

	init1= 0
	do imol= 1,nmol
	  if (resname(1,imol)(1:3).eq.'NO3') then

c	    **** mol numbers of first and last nitrates ****
	    if (init1.eq.0) init1= imol
	    init2= imol

c	    **** add space for 3 atoms at end of res ****
	    j= jares(1,imol)
	    call hadd (j,3,1)

	    nat(j+1)= 8
	    atname(j+1)= '    O'
	    ats(j+1)= 'O '
	    attype(j+1)= 'OW'
	    q(j+1)= -0.834
	    flag(j+1)= '     h'
	    ncon(j+1)= 2
	    icon(1,j+1)= 6
	    icon(2,j+1)= 7
	    scon(1,j+1)= 's'
	    scon(2,j+1)= 's'
	    call hbadd (iares(1,imol),j+1,'s')
	    x(j+1)= x(iares(1,imol))
	    y(j+1)= y(iares(1,imol))
	    z(j+1)= z(iares(1,imol))

	    nat(j+2)= 1
	    atname(j+2)= '   1H'
	    ats(j+2)= 'H '
	    attype(j+2)= 'HW'
	    q(j+2)= 0.417
	    flag(j+2)= '     -'
	    ncon(j+2)= 1
	    icon(1,j+2)= 5
	    scon(1,j+2)= 's'

	    nat(j+3)= 1
	    atname(j+3)= '   2H'
	    ats(j+3)= 'H '
	    attype(j+3)= 'HW'
	    q(j+3)= 0.417
	    flag(j+3)= '     -'
	    ncon(j+3)= 1
	    icon(1,j+3)= 5
	    scon(1,j+3)= 's'

	  end if
	end do

	write (6,*) 'nitrates =',init2-init1+1,init1,init2

c	**** find waters, add space for hydrogens ****

	iwat1= 0
	do imol= 1,nmol
	  if (resname(1,imol)(1:3).eq.'Hoh') then
	    resname(1,imol)(1:3)= 'HOH'

c	    **** mol numbers of first and last waters ****
	    if (iwat1.eq.0) iwat1= imol
	    iwat2= imol

c	    **** add space for 2 atoms at end of res ****
	    j= jares(1,imol)
	    call hadd (j,2,1)

	    nat(j)= 8
	    atname(j)= '    O'
	    ats(j)= 'O '
	    attype(j)= 'OW'
	    q(j)= -0.834
	    flag(j)= '     h'
	    ncon(j)= 2
	    icon(1,j)= 2
	    icon(2,j)= 3
	    scon(1,j)= 's'
	    scon(2,j)= 's'

	    nat(j+1)= 1
	    atname(j+1)= '   1H'
	    ats(j+1)= 'H '
	    attype(j+1)= 'HW'
	    q(j+1)= 0.417
	    flag(j+1)= '     -'
	    ncon(j+1)= 1
	    icon(1,j+1)= 1
	    scon(1,j+1)= 's'

	    nat(j+2)= 1
	    atname(j+2)= '   2H'
	    ats(j+2)= 'H '
	    attype(j+2)= 'HW'
	    q(j+2)= 0.417
	    flag(j+2)= '     -'
	    ncon(j+2)= 1
	    icon(1,j+2)= 1
	    scon(1,j+2)= 's'

	  end if
	end do

	write (6,*) 'waters    =',iwat2-iwat1+1,iwat1,iwat2
	write (6,*) 'Finished mol ',fname(ic),' natom=',natom

c	**** copy into main coord storage for each posibility ****

	do i= 1,natom
	  xg(i,1,ic)= x(i)
	  yg(i,1,ic)= y(i)
	  zg(i,1,ic)= z(i)
	end do

	if (ic.eq.1) then
c	  **** for str A, copy TYR 20 - A so as to overwrite errors for str B ****
	  isave= natom+1
	  call hcopy (iares(20,1),isave,nares(20,1))
	end if

      end do

c     ************ create 60 alternative posibilities for each water ****************

c     ******** read water orientations *******
      open (1,file='makeh2o.out',status='old')
      read (1,*) ((water(i,j),i=1,6),j=1,mpos)
      close (1)
      write (6,*) '72 reference water orientatioons read from makeh2o.out'

      do imol= init1,init2
c	**** set std water config for alternate to nitrates ****
	i= iares(1,imol) + 4
	write (6,*) 'setting alt water for nitrate ',imol,i
	do ipos= 1,72
	  xg(i,1,ipos)= xg(i,1,1)
	  yg(i,1,ipos)= yg(i,1,1)
	  zg(i,1,ipos)= zg(i,1,1)
	  xg(i+1,1,ipos)= water(1,ipos) + xg(i,1,ipos)
	  yg(i+1,1,ipos)= water(2,ipos) + yg(i,1,ipos)
	  zg(i+1,1,ipos)= water(3,ipos) + zg(i,1,ipos)
	  xg(i+2,1,ipos)= water(4,ipos) + xg(i,1,ipos)
	  yg(i+2,1,ipos)= water(5,ipos) + yg(i,1,ipos)
	  zg(i+2,1,ipos)= water(6,ipos) + zg(i,1,ipos)
	end do
	x(i+1)= xg(i+1,1,1)
	y(i+1)= yg(i+1,1,1)
	z(i+1)= zg(i+1,1,1)
	x(i+2)= xg(i+2,1,1)
	y(i+2)= yg(i+2,1,1)
	z(i+2)= zg(i+2,1,1)
      end do

      do imol= iwat1,iwat2
c	**** set std water config for normal waters ****
	i= iares(1,imol)
	write (6,*) 'setting water ',imol,i
	do ipos= 1,72
	  xg(i,1,ipos)= xg(i,1,1)
	  yg(i,1,ipos)= yg(i,1,1)
	  zg(i,1,ipos)= zg(i,1,1)
	  xg(i+1,1,ipos)= water(1,ipos) + xg(i,1,ipos)
	  yg(i+1,1,ipos)= water(2,ipos) + yg(i,1,ipos)
	  zg(i+1,1,ipos)= water(3,ipos) + zg(i,1,ipos)
	  xg(i+2,1,ipos)= water(4,ipos) + xg(i,1,ipos)
	  yg(i+2,1,ipos)= water(5,ipos) + yg(i,1,ipos)
	  zg(i+2,1,ipos)= water(6,ipos) + zg(i,1,ipos)
	end do
	x(i+1)= xg(i+1,1,1)
	y(i+1)= yg(i+1,1,1)
	z(i+1)= zg(i+1,1,1)
	x(i+2)= xg(i+2,1,1)
	y(i+2)= yg(i+2,1,1)
	z(i+2)= zg(i+2,1,1)
      end do

      call writehin ('jnk.hin',0)

c     *********** create 7 copies ****************

      im= 0
      do i1= 0,1
	do ib= 0,1
	  do ic= 0,1
	    im= im + 1
	    dx= boxvecs(1)*ia + boxvecs(4)*ib + boxvecs(7)*ic
	    dy=                 boxvecs(5)*ib + boxvecs(8)*ic
	    dz= 				boxvecs(9)*ic
	    do ipos= 1,mpos
	      do i= 1,natom
	        xg(i,im,ipos)= xg(i,1,ipos) + dx
	        yg(i,im,ipos)= yg(i,1,ipos) + dy
	        zg(i,im,ipos)= zg(i,1,ipos) + dz
	      end do
	    end do
	  end do
	end do
      end do

c     **** double cell size ****

      alen= alen * 2.0
      blen= blen * 2.0
      clen= clen * 2.0
      do i= 1,9
	boxvecs(i)= boxvecs(i) * 2.0
	boxvecsinv(i)= boxvecsinv(i) / 2.0
      end do

c     **** create 27 images of enlarged cell ****

      nimage= 27
      im= 1
      do i1= -1,1
	do ib= -1,1
	  do ic= -1,1
	    if (ia.ne.0 .or. ib.ne.0 .or. ic.ne.0) then
	      im= im + 1
	      dx= boxvecs(1)*ia + boxvecs(4)*ib + boxvecs(7)*ic
	      dy=                 boxvecs(5)*ib + boxvecs(8)*ic
	      dz= 				  boxvecs(9)*ic
	      do k= 1,9
		rotim(k,im)= rotim(k,1)
	      end do
	      rotim(10,im)= dx
	      rotim(11,im)= dy
	      rotim(12,im)= dz
	    end if
	  end do
	end do
      end do
      call hcopyim (1,natom)

      end
